Implement Python Program to perform the activities such as. 
- splitting the data set into training and validation datasets. 
- building model using Python package on training dataset and test on the validation dataset.

DESCRIPTION
-----------
This experiment involves using Python to divide a dataset into training and validation subsets. The program then trains a machine learning model (e.g., linear regression, k-NN) on the training data and evaluates its performance on the validation data. This approach helps assess the model's generalization ability.

CODE
----
import pandas as pd
from sklearn.model_selection import train_test_split 
from sklearn.linear_model import LinearRegression 
from sklearn.metrics import mean_squared_error

# Load the dataset
df = pd.read_csv("Salary_Data.csv") # Replace with your dataset

# Split the dataset into features (X) and target (y)
X = df[['YearsExperience']] # Replace with feature column(s) y = df['Salary'] # Replace with target column

# Split data into training and validation datasets (80% train, 20% test)
X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)

# Build a Linear Regression model model = LinearRegression()
model.fit(X_train, y_train)

# Test the model on validation data y_pred = model.predict(X_val)

# Calculate Mean Squared Error
mse = mean_squared_error(y_val, y_pred)

# Print results
print("Training completed successfully.")
print("Mean Squared Error on Validation Data:", mse)


OUTPUT
------

Training completed successfully.
Mean Squared Error on Validation Data: 25996923.342813876


